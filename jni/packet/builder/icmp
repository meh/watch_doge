#pragma once

#include <packet/builder/common>
#include <packet/icmp>

namespace wd {
	namespace packet {
		namespace builder {
			class icmp : public base {
				public:
					class echo {
						public:
							echo(class icmp& parent);

							packet::icmp::echo::raw*         packet();
							std::shared_ptr<builder::buffer> build();

						public:
							echo& request();
							echo& reply();

							echo& identifier(uint16_t value);
							echo& sequence(uint16_t value);
							echo& data(uint8_t* data, size_t length);

						private:
							class icmp& _parent;
					};

				public:
					icmp(std::shared_ptr<builder::buffer> buf);
					icmp();

					packet::icmp::raw*               packet();
					std::shared_ptr<builder::buffer> build();

				public:
					echo echo();
			};
		}
	}
}
