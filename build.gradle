buildscript {
	repositories {
		jcenter()
	}
	
	dependencies {
		classpath 'com.android.tools.build:gradle:1.5.0'
		classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0-beta-4584'
	}
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.2"

	defaultConfig {
		applicationId "meh.watchdoge"

		versionCode 1
		versionName "1.0"

		minSdkVersion 19
		targetSdkVersion 23
	}

	lintOptions {
		abortOnError false
	}

	packagingOptions {
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'rules.pro'
		}
	}
}

repositories {
	jcenter()
}

dependencies {
	compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.0-beta-4584'

	compile 'nl.komponents.kovenant:kovenant-core:+'
	compile 'nl.komponents.kovenant:kovenant-combine:+'

	compile 'com.android.support:appcompat-v7:+'
	compile 'com.android.support:design:+'
	compile 'me.zhanghai.android.materialprogressbar:library:1.1.4'

	compile 'org.jetbrains.anko:anko-sdk19:+'
	compile 'org.jetbrains.anko:anko-support-v4:+'
	compile 'org.jetbrains.anko:anko-appcompat-v7:+'

	compile 'org.msgpack:msgpack-core:0.8.1'
}

task packageExecutable(type: Copy) {
	from 'libs/armeabi/'
	into 'src/main/res/raw/'
	include '*'
}

task ndkBuild(type: Exec, description: "Task to run ndk-build") {
	commandLine 'ndk-build'
}

task ndkClean(type: Exec, description: "Task to run ndk-build clean"){
	commandLine 'ndk-build', 'clean'

	doLast {
		delete 'src/main/res/raw/'
	}
}

packageExecutable.dependsOn 'ndkBuild'
preBuild.dependsOn 'packageExecutable'
clean.dependsOn 'ndkClean'
